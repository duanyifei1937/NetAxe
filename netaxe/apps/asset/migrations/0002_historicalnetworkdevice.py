# Generated by Django 3.2.17 on 2023-02-27 15:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('automation', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('asset', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalNetworkDevice',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('serial_num', models.CharField(db_index=True, max_length=200, verbose_name='序列号')),
                ('manage_ip', models.GenericIPAddressField(default='0.0.0.0', verbose_name='管理地址')),
                ('name', models.CharField(default='', max_length=100, verbose_name='资产名称')),
                ('soft_version', models.CharField(default='', max_length=200, verbose_name='软件版本')),
                ('patch_version', models.CharField(default='', max_length=200, null=True, verbose_name='补丁版本')),
                ('u_location_start', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(50), django.core.validators.MinValueValidator(1)], verbose_name='机架位起始')),
                ('u_location_end', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(50), django.core.validators.MinValueValidator(1)], verbose_name='机架位结束')),
                ('uptime', models.DateField(default=django.utils.timezone.now, null=True, verbose_name='上线时间')),
                ('expire', models.DateField(blank=True, null=True, verbose_name='维保日期')),
                ('memo', models.TextField(default='', null=True, verbose_name='备注')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '在线'), (1, '下线'), (2, '挂牌'), (3, '备用')], default=0, verbose_name='状态')),
                ('ha_status', models.PositiveSmallIntegerField(choices=[(1, '主设备'), (2, '从设备'), (0, '独立设备')], default=0, verbose_name='HA状态')),
                ('chassis', models.IntegerField(default=0, verbose_name='机框编号')),
                ('slot', models.IntegerField(default=0, verbose_name='槽位编号')),
                ('auto_enable', models.BooleanField(default=True, verbose_name='自动化纳管')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('attribute', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.attribute', verbose_name='网络属性')),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.category', verbose_name='设备类型')),
                ('framework', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.framework', verbose_name='网络架构')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('idc', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.idc', verbose_name='所属机房')),
                ('idc_model', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.idcmodel', verbose_name='模块')),
                ('model', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.model', verbose_name='硬件型号')),
                ('plan', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='automation.collectionplan', verbose_name='采集方案')),
                ('rack', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.rack', verbose_name='机柜编号')),
                ('role', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.role', verbose_name='设备角色')),
                ('vendor', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.vendor', verbose_name='供应商')),
                ('zone', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.netzone', verbose_name='网络区域')),
            ],
            options={
                'verbose_name': 'historical 网络设备表',
                'verbose_name_plural': 'historical 网络设备表',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
